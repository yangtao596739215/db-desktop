#!/bin/bash

echo "📝 测试新的日志格式（包含文件名和行号）"
echo "================================================"

# 检查应用是否运行
if pgrep -f "A modern database" > /dev/null; then
    echo "✅ 应用正在运行"
else
    echo "❌ 应用未运行，请先启动应用"
    exit 1
fi

echo ""
echo "🔧 日志格式改进:"
echo "================================================"
echo "1. ✅ 添加了文件名和行号信息"
echo "2. ✅ 启用了Caller报告"
echo "3. ✅ 自定义了CallerPrettyfier格式"
echo "4. ✅ 现在日志格式为: [时间] [级别] [文件名:行号] 消息内容"

echo ""
echo "📋 新的日志格式示例:"
echo "================================================"
echo "旧格式: INFO[2025-09-20T11:03:17+08:00] Sending message to AI: 查询user表内容"
echo "新格式: INFO[2025-09-20T11:03:17+08:00] app.go:123 Sending message to AI: 查询user表内容"

echo ""
echo "🎯 优势:"
echo "================================================"
echo "1. 在IDE中点击日志可以直接跳转到对应代码行"
echo "2. 更容易定位问题发生的具体位置"
echo "3. 调试时更加方便和高效"
echo "4. 支持VSCode、GoLand等主流IDE的点击跳转"

echo ""
echo "📋 测试步骤:"
echo "================================================"
echo "1. 打开AI助手界面"
echo "2. 发送消息: '查询user表内容'"
echo "3. 观察终端日志输出"
echo "4. 在IDE中点击日志中的文件名:行号部分"
echo "5. 验证是否能直接跳转到对应代码"

echo ""
echo "✨ 日志格式已优化完成！现在可以享受更好的调试体验了。"
