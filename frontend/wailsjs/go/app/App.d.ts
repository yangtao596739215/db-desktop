// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {models} from '../models';
import {database} from '../models';
import {integration} from '../models';

export function AddConnection(arg1:Record<string, any>):Promise<void>;

export function ClearQueryHistory():Promise<void>;

export function ConfirmCard(arg1:string):Promise<void>;

export function ConfirmToolCall(arg1:string,arg2:boolean):Promise<void>;

export function Connect(arg1:string):Promise<void>;

export function CreateConversation(arg1:string):Promise<models.Conversation>;

export function DeleteConnection(arg1:string):Promise<void>;

export function DeleteConversation(arg1:string):Promise<void>;

export function Disconnect(arg1:string):Promise<void>;

export function ExecuteQuery(arg1:string,arg2:string):Promise<database.QueryResult>;

export function ExecuteQueryWithLimit(arg1:string,arg2:string,arg3:number):Promise<database.QueryResult>;

export function FormatQuery(arg1:string,arg2:string):Promise<string>;

export function GetAIConfig():Promise<integration.AIConfig>;

export function GetConnection(arg1:string):Promise<database.ConnectionConfig>;

export function GetConnectionStatus(arg1:string):Promise<database.ConnectionStatus>;

export function GetConversation(arg1:string):Promise<models.Conversation>;

export function GetConversationHistory(arg1:string):Promise<Array<models.Message>>;

export function GetDatabaseInfo(arg1:string):Promise<database.DatabaseInfo>;

export function GetDatabases(arg1:string):Promise<Array<string>>;

export function GetQueryHistory(arg1:number,arg2:number):Promise<Array<models.QueryHistory>>;

export function GetQueryHistoryByDBType(arg1:string,arg2:number,arg3:number):Promise<Array<models.QueryHistory>>;

export function GetQueryHistoryStats():Promise<Record<string, any>>;

export function GetSupportedDatabaseTypes():Promise<Array<string>>;

export function GetTableData(arg1:string,arg2:string,arg3:string,arg4:number,arg5:number):Promise<database.QueryResult>;

export function GetTableInfo(arg1:string,arg2:string,arg3:string):Promise<database.TableInfo>;

export function GetTables(arg1:string,arg2:string):Promise<Array<database.TableInfo>>;

export function Greet(arg1:string):Promise<string>;

export function ListConnections():Promise<Array<database.ConnectionConfig>>;

export function ListConversations():Promise<Array<models.Conversation>>;

export function RejectCard(arg1:string):Promise<void>;

export function RetryQuery(arg1:number):Promise<database.QueryResult>;

export function SendMessage(arg1:string,arg2:string):Promise<void>;

export function SendMessageWithEvents(arg1:string,arg2:string):Promise<void>;

export function TestConnection(arg1:Record<string, any>):Promise<void>;

export function UpdateAIConfig(arg1:integration.AIConfig):Promise<void>;

export function UpdateConnection(arg1:Record<string, any>):Promise<void>;

export function UpdateConversation(arg1:models.Conversation):Promise<void>;

export function ValidateQuery(arg1:string,arg2:string):Promise<void>;
